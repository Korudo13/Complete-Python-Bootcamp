Write a brief description of all the Object Types and Data Structures we learned about:

    Numbers: Integers (whole numbers) and Floating Point Numbers (or "Floats", decimal numbers).

    Strings: A character or a sequence of characters (words, phrases, sentences, etc.).

    Lists: An ordered sequence of data types. They can be several types.

    Tuples: Immutable (unchangable) sequence of data types.

    Dictionaries: An unordered mapping of data that has a key and an associated value.


Numbers

    1. Write an equation that uses multiplication, division, and exponent, addition, subtraction that is equal to 100.25.

      (100.25 - .25) / 10**1 * 10 + .25


    2. Explain what the cell below will produce and why. Can you change it so the answer is correct?

    2/3

      The answer is 0. Python 2 uses Classic Division, which truncates. 
      I can change it to 2.0/3 to get 0.6666666666666666.

      I can also use casting 2.
        float(2)/3

      I can also import from Python 3, which uses True Division
        from __future__ import division
          3/2

    3. Answer these 3 questions without typing code. Then type code to check your answer.

        What is the value of the expression 4 * (6 + 5)

            44

        What is the value of the expression 4 * 6 + 5

            29

        What is the value of the expression 4 + 6 * 5

            34

    4. What is the TYPE of the result of the expression 3 + 1.5 + 4?

        float

    5. What would you use to find a number's square root, as well as its square

        **
        100 ** 0.5 = 10  (square root of 100)
        100 ** 2 = 10,000 (square of 100)

    
Strings

    1. Given the string 'hello' give an index command that returns 'e'. Use the code below:

        s = 'hello'
        # Print out 'e' using indexing

            print (s[1])

    2. Reverse the string 'hello' using indexing: s = 'hello'

            s[::-1]

    3. Given the string hello, give two methods of producing the letter 'o' using indexing.

            s[-1]
            s[4:]
        
Lists

    1. Build this list [0,0,0] two separate ways

        list = [0,0,0]

        list = [0,0]
        list.append(0)


    2. Reassign 'hello' in this nested list to say 'goodbye' item in this list: 
        l = [1,2,[3,4, 'hello]]

            goodbye = l[2][2]

    3. Sort the list below:
        l = [3,4,5,5,6]
            l.sort()  (the list is already sorted though...)
        
 Dictionaries
 
    1. Using keys and indexing, grab 'hello' from the following dictionaries:
    
        d = {'simple_key': 'hello'}
        # Grab 'hello'
        
          d['simple_key']
          
        d = {'k1': {'k2': 'hello'}}
        #grab hello
       
          d['k1']['k2']
          
       
        #Getting a little trickier
        d = {'k1':[{'nest_key':['this is deep',['hello']]}]}
        #grab hello
       
          d['k1'][0]['nest_key'][1]
       
       
        #This will be hard and annoying!
        d = {'k1': [1,2, {'k2: ['this is tricky', {'tough': [1,2,['hello']]}]}]}
        d = {'k1':[1,2,{'k2':['this is tricky',{'tough':[1,2,['hello']]}]}]}
       
            d['k1'][2]['k2'][1]['tough'][2]
        
     2. Can you sort a dictionary? Why or why not?
     
        Dictionaries can NOT be sorted because mappings are unordered.


Tuples

    1. What is the major difference between Tuples and Lists?
    
        Tuples are immutable (cannot change values), unlike Lists.
        
        
    2. How do you create a tuple?
    
        You declare the variable and use ( ) notation, unlike [ ] notation for lists
        
        t = (1,2,3)
    
    
Sets

    1. What is unique about a set?
    
        Sets are an UNORDERED collection of UNIQUE elements. You can't have two of the same element.
        
            s = set()          
            s.add(4)     
            s.add(2)      
            s.add(4)
            
            If I return "s" it displays:
            {2,4}
            
            Even though I added 4 two times, it only shows up once because "1" is already represented in the set.
            
            
     2. Use a set to find the unique values of the list below
       
       l = [1,2,2,33,4,4,11,22,3,3,2]
       
            set(l)
            
Booleans

    1. What will be the resulting Boolean of the following pieces of code (answer first then check by typing it in!)
    
         # Answer before running the cell
            2 > 3
                False
            
            3 <= 2
                False
            
            3 == 2.0
                False
            
            3.0 == 3
                True
            
            4 ** 0.5 != 2
                False
       
      2. Final Question: What is the boolean output of the cell block below?
      
        # two nested lists
        l_one = [1,2,[3,4]]
        l_two = [1,2,{'k1: 4}]
        
        #True or false?
        l_one[2][0] >= l_two[2]['k1]
        
               l_one[2][0] is 3
               l_two[2]['k1] is 4
               
                    3 is less then 4, not greater than or equal to. 
                    Therefore the answer is "False".
